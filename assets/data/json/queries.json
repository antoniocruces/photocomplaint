{
	"tables": "SELECT '___ref' tablename, COUNT(DISTINCT type) types, COUNT(*) total FROM ref GROUP BY tablename UNION SELECT '___rel' tablename, COUNT(DISTINCT relation) types, COUNT(*) total FROM rel GROUP BY tablename UNION SELECT '___met' tablename, COUNT(DISTINCT type) types, COUNT(*) total FROM met GROUP BY tablename UNION SELECT '___rnk' tablename, COUNT(DISTINCT type) types, COUNT(*) total FROM rnk GROUP BY tablename",
	"errors": "SELECT ref.type, COUNT(DISTINCT nid) total, e.err_features, err_place, err_geopos, err_date, err_total, total_records err_records, CAST(total_records AS REAL) / COUNT(DISTINCT nid) err_percent FROM ref,(SELECT type, SUM(err_features) err_features, SUM(err_place) err_place, SUM(err_geopos) err_geopos, SUM(err_date) err_date, SUM(err_features) + SUM(err_place) + SUM(err_geopos) + SUM(err_date) err_total, COUNT(DISTINCT nid) total_records FROM (SELECT * FROM (WITH RECURSIVE etypes (nid) AS (SELECT DISTINCT nid FROM met WHERE type = 'tipo de exposición'), venues (nid) AS (SELECT DISTINCT nid FROM met WHERE type = 'sede') SELECT ref.nid, type, CASE WHEN t.nid IS NULL THEN 1 ELSE 0 END err_features, CASE WHEN v.nid IS NULL OR country IS NULL OR country = '' OR region IS NULL OR region = '' OR town IS NULL OR town = '' THEN 1 ELSE 0 END err_place, CASE WHEN lat IS NULL OR lat = '' OR lon IS NULL OR lon = '' THEN 1 ELSE 0 END err_geopos, CASE WHEN date <= '0000-00-00' OR date IS NULL OR date = '' OR date >= DATE('now') THEN 1 ELSE 0 END err_date FROM ref LEFT JOIN etypes t ON ref.nid = t.nid LEFT JOIN venues v ON ref.nid = v.nid WHERE type = 'exposición') WHERE err_features > 0 OR err_place > 0 OR err_geopos > 0 OR err_date > 0 UNION SELECT * FROM (WITH RECURSIVE itypes (nid) AS (SELECT DISTINCT nid FROM met WHERE type = 'tipología de institución') SELECT ref.nid, type, CASE WHEN t.nid IS NULL THEN 1 ELSE 0 END err_features, CASE WHEN country IS NULL OR country = '' OR region IS NULL OR region = '' OR town IS NULL OR town = '' THEN 1 ELSE 0 END err_place, CASE WHEN lat IS NULL OR lat = '' OR lon IS NULL OR lon = '' THEN 1 ELSE 0 END err_geopos, CASE WHEN date <= '0000-00-00' OR date IS NULL OR date = '' OR date >= DATE('now') THEN 1 ELSE 0 END err_date FROM ref LEFT JOIN itypes t ON ref.nid = t.nid WHERE type = 'institución') WHERE err_features > 0 OR err_place > 0 OR err_geopos > 0 OR err_date > 0 UNION SELECT * FROM (WITH RECURSIVE activities (nid) AS (SELECT DISTINCT nid FROM met WHERE type = 'actividad de actor') SELECT ref.nid, type, CASE WHEN t.nid IS NULL THEN 1 ELSE 0 END err_features, CASE WHEN country IS NULL OR country = '' OR region IS NULL OR region = '' OR town IS NULL OR town = '' THEN 1 ELSE 0 END err_place, CASE WHEN lat IS NULL OR lat = '' OR lon IS NULL OR lon = '' THEN 1 ELSE 0 END err_geopos, CASE WHEN date <= '0000-00-00' OR date IS NULL OR date = '' OR date >= DATE('now') THEN 1 ELSE 0 END err_date FROM ref LEFT JOIN activities t ON ref.nid = t.nid WHERE type = 'actor') WHERE err_features > 0 OR err_place > 0 OR err_geopos > 0 OR err_date > 0 UNION SELECT * FROM (SELECT ref.nid, type, 0 err_features, CASE WHEN country IS NULL OR country = '' OR region IS NULL OR region = '' OR town IS NULL OR town = '' THEN 1 ELSE 0 END err_place, 0 err_geopos, CASE WHEN date <= '0000-00-00' OR date IS NULL OR date = '' OR date >= DATE('now') THEN 1 ELSE 0 END err_date FROM ref WHERE type = 'catálogo') WHERE err_features > 0 OR err_place > 0 OR err_geopos > 0 OR err_date > 0 UNION SELECT * FROM (SELECT ref.nid, type, 0 err_features, CASE WHEN country IS NULL OR country = '' OR region IS NULL OR region = '' OR town IS NULL OR town = '' THEN 1 ELSE 0 END err_place, 0 err_geopos, CASE WHEN date <= '0000-00-00' OR date IS NULL OR date = '' OR date >= DATE('now') THEN 1 ELSE 0 END err_date FROM ref WHERE type = 'obra de arte') WHERE err_features > 0 OR err_place > 0 OR err_geopos > 0 OR err_date > 0 UNION SELECT * FROM (SELECT ref.nid, type, 0 err_features, CASE WHEN country IS NULL OR country = '' OR region IS NULL OR region = '' OR town IS NULL OR town = '' THEN 1 ELSE 0 END err_place, 0 err_geopos, CASE WHEN date <= '0000-00-00' OR date IS NULL OR date = '' OR date >= DATE('now') THEN 1 ELSE 0 END err_date FROM ref WHERE type = 'empresa') WHERE err_features > 0 OR err_place > 0 OR err_geopos > 0 OR err_date > 0) GROUP BY type ORDER BY type) e ON ref.type = e.type GROUP BY ref.type ORDER BY ref.type",
	"filterexists": "SELECT name FROM sqlite_master WHERE type='table' AND name='idx'",

	"_types": "SELECT DISTINCT type value FROM ref ORDER BY value",
	
	"_pragmas": {
		"fields": "SELECT name FROM PRAGMA_TABLE_INFO('ref') ORDER BY name",
		"keys": "SELECT DISTINCT type as name FROM met WHERE type <> 'género' ORDER BY type",
		"relations": "SELECT DISTINCT relation AS name FROM rel ORDER BY relation",
		"types": "SELECT DISTINCT type name FROM ref ORDER BY type"
	},
	
	"_query": {
		"dropidx": "DROP TABLE IF EXISTS rlx;DROP TABLE IF EXISTS idx",
		"makeids": "DROP TABLE IF EXISTS rlx;CREATE TABLE rlx AS ${conditions};DROP TABLE IF EXISTS idx; CREATE TABLE idx AS SELECT DISTINCT nid FROM(SELECT DISTINCT nid FROM rlx UNION SELECT DISTINCT rid FROM rel INNER JOIN rlx ON rel.nid = rlx.nid)",
		"counts": "SELECT 'rlx' tablename, COUNT(DISTINCT nid) count FROM rlx UNION SELECT 'idx' tablename, COUNT(DISTINCT nid) count FROM idx",
		"countbytype": "SELECT DISTINCT type value, COUNT(DISTINCT nid) count FROM ref WHERE nid IN idx GROUP BY value ORDER BY value",
		"relations": "SELECT x.nid nid, l.type ltype, l.name lname, l.place lplace, l.date ldate, x.relation relation, x.rid rid, x.type rtype, x.name rname, x.place rplace, x.date rdate, x.gender rgender FROM rel x LEFT JOIN ref l ON x.nid = l.nid WHERE x.nid IN(SELECT nid FROM rlx) ORDER BY ltype, lname, x.nid, relation, rtype, rname",
		"singles": "SELECT nid, type, name, gender, place, date, year, ageyears, isalive, town, region, country, lat, lon FROM ref WHERE nid IN idx ORDER BY type, name, nid",
		"_rel": "SELECT x.nid nid, l.type ltype, l.name lname, l.year lyear, l.month lmonth, l.day lday, l.agedays lduration, l.country lcountry, l.region lregion, l.town ltown, l.lat llat, l.lon llon, x.relation relation, x.rid rid, r.type rtype, r.name rname, r.year ryear, r.month rmonth, r.day rday, r.date rdate, r.agerange ragerange, r.ageyears rage, r.isalive risalive, r.country rcountry, r.region rregion, r.town rtown, r.gender rgender, r.lat rlat, r.lon rlon FROM rel x INNER JOIN ref l ON x.nid = l.nid INNER JOIN ref r ON x.rid = r.nid WHERE x.nid IN idx AND x.rid IN idx",
		"_met": "SELECT nid, type, name FROM met WHERE nid IN idx",
		"_ref": "SELECT nid, type, name, year, month, day, date, agerange, ageyears, agemonths, agedays, isalive, country, region, town, place, address, gender, lat, lon FROM ref WHERE  nid IN idx",
		"_rnk": "SELECT nid, type, lscore, lrank, gscore, grank, ascore, arank FROM rnk WHERE nid IN idx",
		"_net": "SELECT x.nid, l.type ltype, l.name lname, relation, x.rid, x.type rtype, x.name rname FROM rel x INNER JOIN ref l ON x.nid = l.nid WHERE x.nid IN idx AND x.rid IN idx",
		"_lia": "SELECT a.nid, a.name titularity, b.name typology FROM(SELECT nid, GROUP_CONCAT(name, ', ') name FROM met WHERE type = 'titularidad de institución' GROUP BY nid) a LEFT JOIN (SELECT nid, GROUP_CONCAT(name, ', ') name FROM met WHERE type = 'tipología de institución' AND name NOT IN(${blacklist}) GROUP BY nid) b ON a.nid = b.nid"
	},
	
	"_search": "SELECT * FROM ref ORDER BY type, name, nid",
	
	"__exists": "SELECT nid FROM ref WHERE nid = ${nid}",
	
	"__ref": "SELECT * FROM ref WHERE nid = ${nid}",
	"__met": "SELECT * FROM met WHERE nid = ${nid}",
	"__rel": "SELECT DISTINCT x.nid, x.relation, r.type, r.name, r.date, r.place, r.lat, r.lon FROM(SELECT nid, relation FROM rel WHERE rid = ${nid} UNION SELECT rid, relation FROM rel WHERE nid = ${nid}) x INNER JOIN ref r ON x.nid = r.nid",
	"__aff": "SELECT lnid, lrelation, rrelation, rnid, l.name lname, l.type ltype, l.lat llat, l.lon llon, r.name rname, r.type rtype, r.lat rlat, r.lon rlon, COUNT(*) total FROM(SELECT l.nid link, l.rid lnid, l.relation lrelation, r.relation rrelation, r.rid rnid FROM rel l INNER JOIN rel r ON l.nid = r.nid AND l.rid < r.rid) u LEFT JOIN ref l ON u.lnid = l.nid LEFT JOIN ref r ON u.rnid = r.nid WHERE lnid = ${nid} OR rnid = ${nid} GROUP BY lnid, lrelation, rrelation, rnid, lname, ltype, rname, rtype HAVING total > 1 ORDER BY total DESC, lrelation, rrelation, ltype, rtype, lname, rname",
	"__rnk": "SELECT * FROM rnk WHERE nid = ${nid}",
	"__pth": "SELECT x.relation role, m.year, m.place, COUNT(*) total FROM rel x INNER JOIN ref m ON x.nid = m.nid WHERE(x.nid = ${nid} OR x.rid = ${nid}) AND x.rid IN(SELECT nid FROM ref where TYPE IN('actor', 'institución')) AND x.relation IN('actor artista', 'actor comisario', 'institución organizadora', 'institución patrocinadora') AND x.rid IN(SELECT rid FROM rel WHERE relation IN('actor artista', 'actor comisario', 'institución organizadora', 'institución patrocinadora')) GROUP BY role, m.year, m.place HAVING COUNT(*) > 1 ORDER BY role, m.year, m.place",
	"__rmx": "SELECT type, MIN(grank) AS ming, MAX(grank) maxg, MIN(lrank) AS minl, MAX(lrank) maxl, MIN(arank) AS mina, MAX(arank) maxa FROM rnk GROUP BY type"
}